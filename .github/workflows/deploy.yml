name: 📚 构建与部署文档

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build_docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write

    steps:
      - name: ⏱️ 记录开始时间
        id: start_time
        run: echo "start_time=$(date +%s)" >> $GITHUB_OUTPUT

      - name: 📥 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: npm

      - name: 📦 安装 Node.js 依赖
        run: |
          echo "::group::📦 安装依赖..."
          npm ci
          echo "::endgroup::✅ 依赖安装完成"
          
      - name: 🏗️ 构建 VuePress 项目
        run: npm run docs:build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 收集构建统计信息
        id: build_stats
        run: |
          # 提交统计
          COMMIT_COUNT=$(git rev-list --count ${{ github.event.before }}..${{ github.sha }})
          ALL_COMMITS=$(git log ${{ github.event.before }}..${{ github.sha }} --pretty=format:"- 📝 %s (%an)")

          # 构建环境信息
          NODE_VER=$(node -v)
          NPM_VER=$(npm -v)
          OS_INFO=$(uname -a)

          # 机器硬件信息
          CPU_MODEL=$(lscpu | grep "Model name" | sed 's/Model name:\s*//')
          CPU_CORES=$(nproc)
          MEM_TOTAL=$(grep MemTotal /proc/meminfo | awk '{print $2/1024 " MB"}')
          DISK_TOTAL=$(df -h / | awk 'NR==2 {print $2}')

          # 构建产物统计
          BUILD_SIZE=$(du -sh docs/.vuepress/dist | cut -f1)
          PAGE_COUNT=$(find docs/.vuepress/dist -type f -name "*.html" | wc -l)

          echo "commit_count=$COMMIT_COUNT" >> $GITHUB_OUTPUT
          echo "all_commits<<EOF" >> $GITHUB_OUTPUT
          echo "$ALL_COMMITS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo "node_ver=$NODE_VER" >> $GITHUB_OUTPUT
          echo "npm_ver=$NPM_VER" >> $GITHUB_OUTPUT
          echo "os_info=$OS_INFO" >> $GITHUB_OUTPUT
          echo "cpu_model=$CPU_MODEL" >> $GITHUB_OUTPUT
          echo "cpu_cores=$CPU_CORES" >> $GITHUB_OUTPUT
          echo "mem_total=$MEM_TOTAL" >> $GITHUB_OUTPUT
          echo "disk_total=$DISK_TOTAL" >> $GITHUB_OUTPUT
          echo "build_size=$BUILD_SIZE" >> $GITHUB_OUTPUT
          echo "page_count=$PAGE_COUNT" >> $GITHUB_OUTPUT

      - name: 🔍 检查 404 链接
        id: link_check
        uses: lycheeverse/lychee-action@v1.9.0
        with:
          args: --base docs/.vuepress/dist --recursive --verbose --no-progress --accept 200,302 .
        continue-on-error: true

      - name: 🚀 推送链接到搜索引擎
        id: push_urls
        run: |
          node .github/workflows/scripts/push_to_indexnow.js | tee /dev/stdout | grep "urls_count" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: 📝 写入构建摘要
        run: |
          END_TIME=$(date +%s)
          DURATION=$((END_TIME - ${{ steps.start_time.outputs.start_time }}))

          cat << EOF >> $GITHUB_STEP_SUMMARY
          ## 🚀 文档构建与部署报告
          **完成状态：** ✅ 成功  
          **构建时间：** $(date '+%Y-%m-%d %H:%M:%S')  
          **总耗时：** ${DURATION}s  
          **推送链接数：** ${{ steps.push_urls.outputs.urls_count }}  

          ### 📦 构建产物
          - 构建目录大小：${{ steps.build_stats.outputs.build_size }}
          - HTML 页面数量：${{ steps.build_stats.outputs.page_count }}

          ### 📜 提交信息
          - 本次提交数量：${{ steps.build_stats.outputs.commit_count }}
          ${{ steps.build_stats.outputs.all_commits }}

          ### 🖥️ 构建机器信息
          - CPU 型号：${{ steps.build_stats.outputs.cpu_model }}
          - CPU 核心数：${{ steps.build_stats.outputs.cpu_cores }}
          - 内存总量：${{ steps.build_stats.outputs.mem_total }}
          - 磁盘总量：${{ steps.build_stats.outputs.disk_total }}
          - 系统信息：${{ steps.build_stats.outputs.os_info }}
          - Node.js 版本：${{ steps.build_stats.outputs.node_ver }}
          - NPM 版本：${{ steps.build_stats.outputs.npm_ver }}

          ### 🔍 链接检查结果
          EOF
          if [ -f lychee-report.md ]; then
            cat lychee-report.md >> $GITHUB_STEP_SUMMARY
          else
            echo "✅ 未检测到 404 链接" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🚀 部署到 GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/.vuepress/dist
